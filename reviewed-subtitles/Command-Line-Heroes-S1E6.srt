1
00:00:04,275 --> 00:00:07,500
Ingrid Burrington 想要走进云的世界
Ingrid Burrington wanted to walk inside a cloud.

2
00:00:09,225 --> 00:00:11,225
不是真实的“一朵云”哟
Not just “a cloud.” though.

3
00:00:11,550 --> 00:00:12,675
而是“云计算”的世界
The cloud.

4
00:00:15,275 --> 00:00:17,575
我不知道互联网真正的样子
I don't know what the internet looks like,

5
00:00:17,575 --> 00:00:19,175
我也不认为互联网是我想象中的那样
I don't think it looks like this.

6
00:00:19,750 --> 00:00:22,000
所以我想尝试找出它真实的模样
I wanted to just kind of find out.

7
00:00:23,400 --> 00:00:24,675
Ingrid 是一名记者
Ingrid's a journalist.

8
00:00:25,000 --> 00:00:27,125
在她为《大西洋》撰写的系列报道中
For a series she wrote for the Atlantic,

9
00:00:27,425 --> 00:00:29,884
她讲述了自己参观一个数据中心的经历
she talked her way into one of the datacenters,

10
00:00:30,150 --> 00:00:33,175
那是个我们网络生活越来越依赖的地方
where more and more of our online lives play out.

11
00:00:33,700 --> 00:00:36,200
在那里 她发现的东西与“云”这个词相差甚远：
What she found there wasn't all fluffy and white,

12
00:00:37,100 --> 00:00:39,100
是实实在在的、摸得着的事物
it was downright physical.

13
00:00:40,400 --> 00:00:43,525
首先 她要拍照登记 申请访客身份卡
First up, getting her photo taken for an ID tag.

14
00:00:43,800 --> 00:00:46,300
然后 要通过安检站
Next, going through security checkpoints

15
00:00:46,575 --> 00:00:48,575
签署一份保密协议
and signing a nondisclosure agreement.

16
00:00:49,175 --> 00:00:52,275
最后 她才能去看机房
 Finally, she gets to see the machines.

17
00:00:55,300 --> 00:01:00,075
机房基本上就像个仓库 就像超市的那样 但比它大得多
The server rooms are basically warehouses, think Costco, but bigger.

18
00:01:00,450 --> 00:01:03,725
整个机房看起来有种别样的美
And there's something beautiful about that warehouse look,

19
00:01:04,175 --> 00:01:06,950
所有的东西都整齐陈列着
because everything's just there on display.

20
00:01:10,175 --> 00:01:11,925
一排排毫无遮拦的服务器上
Racks of naked servers,

21
00:01:11,925 --> 00:01:15,909
连接着通往世界各地的线缆
and above them all the cables connecting to the world,

22
00:01:16,150 --> 00:01:18,225
它们沿着天花板上的轨道整齐布线
running along tracks on the ceiling.

23
00:01:18,525 --> 00:01:21,550
眩目的蓝色指示灯闪烁着
There's a sort of fancy blue light going on,

24
00:01:22,025 --> 00:01:23,475
让人想到《电子世界争霸战》里的场景
kind of a Tron thing. 
*《电子世界争霸战》（Tron），一系列科幻电影，第一部上映于 1982 年，国内亦将本系列名称译为“创”
这个系列以使用荧光色衬以灰暗背景来营造科技感的美术风格而闻名 - 视频制作者注

25
00:01:23,475 --> 00:01:24,475
*《电子世界争霸战》（Tron），一系列科幻电影，第一部上映于 1982 年，国内亦将本系列名称译为“创”
这个系列以使用荧光色衬以灰暗背景来营造科技感的美术风格而闻名 - 视频制作者注

26
00:01:24,475 --> 00:01:26,000
但占据了大部分空间的 还是贪婪渴求着电力的一行行服务器
But mostly, it's rows and rows of very hungry servers.
*《电子世界争霸战》（Tron），一系列科幻电影，第一部上映于 1982 年，国内亦将本系列名称译为“创”
这个系列以使用荧光色衬以灰暗背景来营造科技感的美术风格而闻名 - 视频制作者注

27
00:01:26,000 --> 00:01:29,000
但占据了大部分空间的 还是贪婪渴求着电力的一行行服务器
But mostly, it's rows and rows of very hungry servers.

28
00:01:31,100 --> 00:01:36,675
全球范围内的所有数据中心每年消耗的能源比整个英国还要多
Datacenters use up more energy each year than the whole of the United Kingdom.

29
00:01:37,575 --> 00:01:40,620
这就意味着它们会释放惊人的巨大热量
And that means they're throwing off crazy amounts of heat,

30
00:01:40,975 --> 00:01:43,359
这就是为什么当 Ingrid 环顾四周时…
which is why when Ingrid looks around ...

31
00:01:44,100 --> 00:01:46,100
我发现这座建筑主要的设计理念
This is a building that's mostly designed around

32
00:01:46,100 --> 00:01:48,612
是建造最理想最完美的暖通系统
having the most perfect HVAC system imaginable.

33
00:01:49,600 --> 00:01:53,400
Ingrid 发现 围绕数据中心的一切都强调经济实用
Ingrid discovered that everything about a datacenter is pragmatic,

34
00:01:53,825 --> 00:01:56,375
简单说就是一堆主机
so yeah just a bunch of machines,

35
00:01:56,375 --> 00:01:58,665
一堆线缆、一堆风扇
a bunch of cables, a bunch of fans,

36
00:01:58,665 --> 00:02:03,097
放在一大块租金便宜的地皮上 用大量廉价的工业用水来冷却
on lots of cheap land, using lots of cheap water to keep it cool.

37
00:02:03,600 --> 00:02:06,560
完全没有“云”这个词本身散发的浪漫
Not quite what the word "cloud" represents,

38
00:02:06,975 --> 00:02:10,704
但另一方面 我们的生活、我们的工作以及我们的话语
but on the other hand, it's our lives, our work, our voices

39
00:02:10,704 --> 00:02:13,700
都在这个服务器的仓库里回响着
bouncing around in that warehouse of machines.

40
00:02:14,475 --> 00:02:16,250
是的 这有点超现实
Yeah, it can be a little surreal

41
00:02:16,250 --> 00:02:19,869
并不是说我就知道那台机器里存有某人的电子邮件
because it's not as though it's like I know that machine has someone's email,

42
00:02:19,869 --> 00:02:21,744
这台机器又存有别的东西
and that machine has something else.

43
00:02:22,050 --> 00:02:25,125
而是我意识到…
But realizing kind of just how...

44
00:02:26,050 --> 00:02:30,549
周围有很多看不见的事情正在发生
how much is kind of happening around me implicitly that I can't see, 

45
00:02:30,549 --> 00:02:32,691
我能从声音里听得出来
but I can kind of hear

46
00:02:32,691 --> 00:02:35,626
不管是服务器的呼呼声也好
in the sense of the whirring of the machines

47
00:02:35,626 --> 00:02:38,976
还是其它的各种声音也好
and the larger kind of operation of the space.

48
00:02:39,475 --> 00:02:41,475
机房让我觉得庄严而怪异
There is something a little bit eerie about it,

49
00:02:42,300 --> 00:02:46,325
就像是面对工业的力量 人会肃然起敬
and I mean there's sort of like an industrial awe ...

50
00:02:52,275 --> 00:02:56,579
时刻要记住 在我们使用服务的时候 它们的基础
It's so important to remember that these buildings really are there,

51
00:02:56,579 --> 00:02:59,175
也就是这些建筑 总在某个隐蔽的角落嗡嗡运作着
somewhere, humming behind the fence.

52
00:02:59,700 --> 00:03:01,028
这之所以重要 是因为
 Because here's the thing,

53
00:03:01,550 --> 00:03:06,110
当我们谈论在云上存储东西 或创建应用程序时
when we talk about storing stuff on the cloud, or building an app on the cloud,

54
00:03:06,525 --> 00:03:10,550
我们有时会自欺欺人地认为它就像天上的云
we sometimes fool ourselves into thinking it's like a cloud in the sky,

55
00:03:10,986 --> 00:03:12,736
是没有人能触碰的存在
something nobody can touch.

56
00:03:14,225 --> 00:03:16,925
但现实恰恰相反
But the reality is exactly the opposite,

57
00:03:17,550 --> 00:03:20,382
一旦我们认识到云数据中心真实存在于某地
and once we remember where the cloud lives,

58
00:03:20,725 --> 00:03:23,685
我们就会开始思考谁拥有着云了
we can start talking about who owns the cloud.

59
00:03:24,050 --> 00:03:28,226
那么是谁在控制这些服务器、线缆和风扇呢？
Who controls all those servers, and cables, and fans?

60
00:03:28,775 --> 00:03:32,823
它们又是如何改变开发者的工作方式的呢？
And how does that change the way developers build the future?

61
00:03:33,850 --> 00:03:37,450
云让我们紧密地连接在一起
Because in cloud city, we're all living there together. 

62
00:03:38,975 --> 00:03:42,533
我是 Saron Yitbarek 这里是《代码英雄》
I'm Saron Yitbarek, and this is Command Line Heroes.

63
00:03:42,533 --> 00:03:44,658
一档由红帽公司推出的原创播客节目
An original podcast from Red Hat, 

64
00:03:45,350 --> 00:03:48,118
第六集 揭秘云计算
episode six, Crack the Cloud Open.

65
00:03:53,675 --> 00:03:56,425
没有所谓的“云” 那只是别人的电脑
There is no cloud, it's just someone else's computer.

66
00:03:57,100 --> 00:04:01,980
Chris Watterston 是一名设计师 他对围绕云产生的误解很是恼火
Chris Watterston is a designer who grew annoyed at the confusion around the cloud.

67
00:04:02,525 --> 00:04:05,325
这个词模糊了数据中心的形象
That word had softened the edges of datacenters,

68
00:04:05,675 --> 00:04:06,975
就像 Ingrid 参观过的那个一样
like the one Ingrid visited.

69
00:04:07,550 --> 00:04:09,550
当 Chris 把这句口号做成贴纸时
When he put that slogan on a sticker,

70
00:04:09,550 --> 00:04:11,675
他因此成为了网红
he became internet famous.

71
00:04:12,175 --> 00:04:15,764
“没有所谓的‘云’ 那只是别人的电脑”
That line "There is no cloud, it's just someone else's computer,"

72
00:04:16,125 --> 00:04:19,981
这句话现在出现在 T 恤、帽衫、咖啡杯、海报、
is now on t-shirts, hoodies, coffee mugs, posters,

73
00:04:19,981 --> 00:04:23,031
杯垫和许多主题演讲上
coasters, and more than a few keynote presentations. 

74
00:04:23,800 --> 00:04:28,168
人们完全不理解云是什么 还用的很欢乐又心安
People sort of still use the cloud as if it's going up there,

75
00:04:28,168 --> 00:04:31,781
他们可能完全误解了云
people that don't understand fully what it is, they can still take it sort of the wrong way

76
00:04:31,781 --> 00:04:38,400
不明白他们的数据实际上是穿过铜轴电缆、或者光纤
and not understand that their data is actually going across copper cables, or fibers,

77
00:04:38,400 --> 00:04:43,050
来到某一个实际上由他人管理和拥有的存储设备
whatever it might be into a storage device that is actually managed and owned by someone else.

78
00:04:44,500 --> 00:04:48,527
显然 对于一些有需要隐藏的私人内容的人来说
Which obviously, for some people, if they've got private content they want to hide,

79
00:04:48,527 --> 00:04:49,450
这是相当可怕的隐患
 could be quite scary. 

80
00:04:51,175 --> 00:04:55,287
所以 下次你想把东西扔到云上的时候 想想 Chris 的贴纸吧
So think of Chris's sticker next time you're tossing something onto the cloud.

81
00:04:55,700 --> 00:04:57,050
想想你到底要扔到哪里去
Where are you really tossing it?

82
00:04:57,600 --> 00:04:59,475
在 App 上工作也是同样道理
Same goes for working on an app,

83
00:05:00,025 --> 00:05:04,201
所谓“无服务器”的说法都是骗人的 根本没有这回事
for all the talk of going serverless, there's really no such thing.

84
00:05:04,650 --> 00:05:08,025
云就是别人的服务器、别人的电脑
It's somebody else's server, somebody else's computer.

85
00:05:14,675 --> 00:05:17,635
不过云这件事情从某种意义上说 是一种成长
In a sense, this is a story about growing up.

86
00:05:18,150 --> 00:05:22,198
整一季节目里 我们一直在追溯开源的成长与变革
All season long, we've been tracking the evolution of open source.

87
00:05:22,600 --> 00:05:27,288
从最初的自由软件运动到 Linux 的诞生
From its rebellious origins with the free software movement, and the emergence of Linux, 

88
00:05:27,725 --> 00:05:34,650
直至今天 开源工具和方法把我们带到了远离家园的云端
all the way to today when open source tools and methods have taken us far from home into the cloud.

89
00:05:35,400 --> 00:05:38,872
可以打个比方 一个人找房东租房
Think of it this way, when a person finds an apartment to rent,

90
00:05:39,175 --> 00:05:43,095
她需要签合同、搬进去、把房子整理成自己的居所
she's going to sign a contract, move in, and make it her own.

91
00:05:43,800 --> 00:05:47,848
当开发者寻找云供应商时 他们也在做着同样的事情
When developers go looking for a cloud provider, they have to do the same thing.

92
00:05:48,575 --> 00:05:51,075
这就是我们现在所处的情况
That's the moment we're in right now,

93
00:05:51,650 --> 00:05:57,298
全世界的开发者都在转向各种云上线产品
the moment when a whole world of developers is making their move onto a series of clouds,

94
00:05:57,725 --> 00:06:02,200
然后开始明白租赁的真实含义
and starting to figure out what the rental lease actually says. 

95
00:06:03,150 --> 00:06:09,050
严肃地发问一句 为什么我们一开始就急着跳上云端呢
Just for the record, why are we in such a rush to hop onto a cloud in the first place?

96
00:06:09,900 --> 00:06:16,350
因为开发者不想维护 App 运行所需的设备
Developers don't want to have to manage the infrastructure that is running their applications.

97
00:06:16,975 --> 00:06:20,639
这位是 Brandon Butler 《网络世界》的高级编辑
This is Brandon Butler, he's the senior editor at Network World.

98
00:06:20,639 --> 00:06:23,471
多年来致力于研究云计算
 And he's been covering cloud computing for years.

99
00:06:23,750 --> 00:06:27,250
开发者想要开发 App 部署 App
They want to develop apps, and they want to deploy those apps,

100
00:06:27,250 --> 00:06:29,250
并只在乎 App 能不能正常运行
and they want those apps to just run.

101
00:06:29,500 --> 00:06:34,158
我们已经看到云孕育的 越来越多的服务 例如无服务器计算
And more and more, we've seen things like serverless computing,

102
00:06:34,158 --> 00:06:36,400
功能即服务
and functions-as-a-service,

103
00:06:36,400 --> 00:06:41,075
以及容器和容器管理平台 如 Kubernetes
and containers, and container management platforms, like Kubernetes. 

104
00:06:41,475 --> 00:06:43,475
顺便打个广告
Check out episode five, by the way,

105
00:06:43,475 --> 00:06:45,859
想了解容器和 Kubernetes 请看我们的上期节目
for a run-down on containers and Kubernetes.

106
00:06:46,350 --> 00:06:53,375
这些技术将 App 运行所依赖的底层细节隐藏了起来
All these things are helping to abstract away the underlying infrastructure that applications need to run on.

107
00:06:53,750 --> 00:06:58,525
这将是一个可以在未来可预见的持续发展的趋势
And that's going to be a trend that we're only going to see continue to develop into the future.

108
00:07:01,300 --> 00:07:06,525
云拥有巨大吸引力的部分原因 可以用“超大规模”这个词来解释
A big part of that attraction is summed up by the word hyperscale.

109
00:07:07,125 --> 00:07:09,637
通过云为你提供的所有基础设施
With the cloud providing all your infrastructure,

110
00:07:09,637 --> 00:07:15,669
初创公司可以迅速扩张或者收缩自己的服务
you can take a startup and scale it up, or down, as fast as you want.

111
00:07:16,100 --> 00:07:22,709
你不再需要购买自己的设备 你只需要租赁你想要的规模的云
You're not building your own infrastructure anymore, you're just renting out however much of the cloud you need.

112
00:07:23,406 --> 00:07:26,681
Brandon 解释了“超大规模”对初创公司的具体帮助
Brandon explains what hyperscale means for a startup. 

113
00:07:27,325 --> 00:07:31,885
使用公有云进行 App 开发的整套模型
This whole model of using the public cloud for application development

114
00:07:31,885 --> 00:07:36,493
对开发者来说是一个巨大的进步
has been a huge advance for application developers.

115
00:07:36,800 --> 00:07:40,225
它曾经成就了一系列全新的初创公司
It's created a whole new range of startups,

116
00:07:41,350 --> 00:07:46,806
这些初创公司也已经成长为大众都喜欢投资的公司
and companies that have grown past startups and become major publicly funded companies.

117
00:07:47,225 --> 00:07:49,865
想想 Netflix 这样的公司
You think about a company like Netflix

118
00:07:49,865 --> 00:07:56,777
它的大部分后端都运行在亚马逊的以及其他的云上
that runs much of its backend infrastructure on Amazon's cloud, and other cloud providers as well.

119
00:07:57,100 --> 00:08:01,550
这些公司现在如此壮大的原因 正是他们在使用云
They were able to turn into what they are, because they are using the cloud.

120
00:08:01,875 --> 00:08:06,307
因此 云对开发者的影响是不可轻视的
So the impact that the cloud has had on developers cannot be understated.

121
00:08:06,307 --> 00:08:11,059
云已经成为过去十年 App 开发领域的主要转变
It's been the major shift in application development over the last decade.

122
00:08:12,375 --> 00:08:15,527
Nick Bush 是 Meadowbrook 保险公司的一位系统管理员
Nick Bush, a sys admin at Meadowbrook Insurance

123
00:08:15,527 --> 00:08:20,225
他还记得在云计算诞生之前 调整基础设施是多么痛苦的事
remembers what a pain infrastructure changes were before the cloud.

124
00:08:20,775 --> 00:08:24,807
以前 有些人想出新项目的点子
Before, it was somebody would come up with an idea to do a certain project,

125
00:08:24,807 --> 00:08:27,450
我们会说 “这需要硬件支持 而我们没有”
and we would say, "That would need hardware to do that."

126
00:08:27,450 --> 00:08:31,178
他们会问 “那么我们该怎么办？”
And they would ask, "Well, how do we do that?"

127
00:08:31,178 --> 00:08:33,625
我们以前总是受到内存的限制
So we were always constrained by memory,

128
00:08:33,625 --> 00:08:35,625
尤其是运行虚拟机软件 通常是最困难的部分
and VM-ware usually was the hard part. 

129
00:08:35,625 --> 00:08:37,385
我们经常需要在任意时间启动虚拟机
And we would be constrained by how many virtual machines we could spin up at any one given time.

130
00:08:37,385 --> 00:08:40,313
但能随时启动的虚拟机数量总是不多
And we would be constrained by how many virtual machines we could spin up at any one given time.

131
00:08:40,825 --> 00:08:43,657
所以我们不得不花很多钱买新处理器
So we would have to go get a quote for new processors,

132
00:08:43,657 --> 00:08:49,625
新内存、新硬件 或者花 5000 美元加新的东西
new memory, new hardware, $5,000 added space, and stuff like that.

133
00:08:49,975 --> 00:08:52,625
一旦我们从几个不同的供应商得到报价
And once we get those quotes from a couple of different vendors,

134
00:08:52,625 --> 00:08:55,180
就得报给管理层 他们要花时间审核
 it would go to management, and they would take time.

135
00:08:55,675 --> 00:08:59,275
这样 仅仅是购买硬件都需要漫长的过程
It was a long, drawn-out process just to get the hardware in.

136
00:08:59,275 --> 00:09:04,025
更不要说构建虚拟机 再反复考虑和测试等等
Let alone, then build the VMs and turn them over and test and stuff like that.

137
00:09:04,025 --> 00:09:04,834
所以其实我的意思是
So I mean

138
00:09:04,834 --> 00:09:07,150
有了云 我们可以在几个小时内
there were several months of front-end work

139
00:09:07,150 --> 00:09:13,246
完成以往需要几个月完成的前期工作
versus now we can definitely get that okay within a couple hours usually.

140
00:09:13,246 --> 00:09:16,142
让虚拟机运行起来 第二天就交付给其他人
And go spin it up, and go turn it over to them the next day.

141
00:09:16,425 --> 00:09:18,200
在周转时间上 这是个很大的改变
So it is a big turnaround difference.

142
00:09:18,925 --> 00:09:22,269
在拓展性、速度和价格这些方面
Between scalability, speed, and price,

143
00:09:22,650 --> 00:09:25,432
云计算相当吸引人
the cloud can look very tempting.

144
00:09:25,925 --> 00:09:28,437
还是拿租房作比喻
To go back to the apartment rental analogy,

145
00:09:28,725 --> 00:09:35,191
云就像可以让你免费得到一个管家和司机的服务
cloud options can feel like you're getting a butler and a driver at no additional cost.

146
00:09:35,675 --> 00:09:37,050
你很难对云计算说不
It's hard to say no,

147
00:09:37,500 --> 00:09:43,276
如今市场上有主要的四家壮志雄心的云供应商在开疆拓土
and today we've got four very ambitious cloud providers doing the tempting. 

148
00:09:43,660 --> 00:09:48,052
他们都想成为你在云上的“新房东”
They all want to be your new landlord in cloud city.

149
00:09:48,425 --> 00:09:51,321
但是且慢 每个租过房子的人都知道
But hold up, everyone who's rented a home

150
00:09:51,321 --> 00:09:54,025
租房和买房不一样
knows it's not the same as buying.

151
00:09:54,450 --> 00:09:58,114
你不能自己拆掉一堵墙 或者安装一个新的按摩浴缸
You can't just knock down a wall, or install a new jacuzzi.

152
00:09:58,600 --> 00:10:00,300
你得通过房东来干这些事
You got to go through the landlord.

153
00:10:00,850 --> 00:10:05,144
我们使用公有云 在某种程度上会受制于一家独资公司
In some ways, could we be stuck if we find ourselves beholden to a single proprietary company?

154
00:10:05,144 --> 00:10:07,906
这会不会对我们不利？
In some ways, could we be stuck if we find ourselves beholden to a single proprietary company?

155
00:10:08,300 --> 00:10:09,475
Brandon Butler 先生
Brandon Butler. 

156
00:10:09,925 --> 00:10:13,397
当你使用云供应商提供的公有云时
When you use a proprietary cloud vendor,

157
00:10:13,750 --> 00:10:16,198
你有不同的使用方法
there are different ways you can use it.

158
00:10:16,198 --> 00:10:21,104
你可以拥抱开源标准和开源平台
You can use it in a way that embraces open source standards and open source platforms 

159
00:10:21,104 --> 00:10:23,104
并且在云上运行开源软件
and run those open source platforms

160
00:10:23,104 --> 00:10:27,344
即使这云本身是供应商的专有服务
on top of a cloud that even may be proprietary,

161
00:10:27,600 --> 00:10:32,900
你也可以使用不是开源的原生工具
or you can use native tools to those cloud providers that may not be as open source,

162
00:10:33,450 --> 00:10:38,138
这些工具可能在公有云上有更好的集成
but they may have stronger integrations to the public cloud platform.

163
00:10:38,425 --> 00:10:41,449
因此 这是终端用户必须考虑的一个重大问题
So, it's a big trade-off that end users have to consider.

164
00:10:41,449 --> 00:10:45,493
我是想使用云供应商的原生工具
Do I want to use tools that are native to the cloud provider

165
00:10:45,493 --> 00:10:50,734
这些工具可能与这个云供应商提供的服务
that may be more heavily integrated with the services

166
00:10:50,734 --> 00:10:56,384
以及其他服务更好的集成
this cloud provider offers and other services that I might want to use also on that cloud,

167
00:10:56,625 --> 00:11:00,673
还是拥抱开源标准 使用一个开源平台
or do I want to prioritize using an open source platform

168
00:11:00,673 --> 00:11:03,834
享受更高的自由度
that will give me more freedom

169
00:11:03,834 --> 00:11:09,722
在自己和其他提供商的平台上也能运行？
to run that maybe on my own infrastructure or another cloud provider's infrastructure? 

170
00:11:10,625 --> 00:11:13,313
随着我们所依赖的云技术不断发展
As the clouds we rely on keep growing

171
00:11:13,313 --> 00:11:17,337
四大云供应商相互竞争
and the big four cloud providers elbow past each other for dominance,

172
00:11:17,625 --> 00:11:19,625
我们作为开发者有了新选择
 we developers have a choice.

173
00:11:20,125 --> 00:11:22,125
我们是放弃一些独立性
 Do we give up some of our independence,

174
00:11:22,125 --> 00:11:25,526
依靠单一的云供应商来保护我们的工作
relying on a single cloud provider to protect our work,

175
00:11:25,850 --> 00:11:27,850
还是选择另一条路
or could we take another road,

176
00:11:27,850 --> 00:11:32,330
在保持独立性的同时最大化云的拓展性?
maximize the scalability of the cloud while keeping our independence?

177
00:11:32,975 --> 00:11:35,807
换句话说 我们能否在租房合同上写明
In other words, can we sign a lease that says,

178
00:11:35,807 --> 00:11:40,415
“房客有权任意处置该房 例如拆墙或其他装修”？
"Sure. Do what you want with the place. Knock a wall down. Make it your own?"

179
00:11:49,975 --> 00:11:53,149
那么 放弃一点点独立性又有什么问题呢？
So, what's the problem with giving up a little independence?

180
00:11:53,500 --> 00:11:56,460
如果你是一名开发者 可能没受到什么影响
If you're a developer, it might not be so obvious.

181
00:11:56,908 --> 00:11:59,980
因为大多数时候都有运维团队
 That's because it's mostly been the ops teams

182
00:11:59,980 --> 00:12:02,300
在背后监督开发者们小心行事
who've been encouraging us to tread lightly.

183
00:12:02,675 --> 00:12:04,750
他们格外留心于具体细节
They noticed the nuts-and-bolts issues.

184
00:12:05,200 --> 00:12:09,440
这位是 Major Hayden 他是 Rackspace 的首席架构师
Here's Major Hayden. He's the principal architect at Rackspace. 

185
00:12:09,700 --> 00:12:13,375
有些时候 开发者经常发现他们有各种不同的需要
Developers will often find that over time they may have requirements for different things

186
00:12:13,375 --> 00:12:16,255
比如某些专门化的存储
like a certain specialized kind of storage,

187
00:12:16,255 --> 00:12:20,825
或者可能想要一定大小的虚拟机
or they may want to have a certain sized VM,

188
00:12:20,825 --> 00:12:25,641
或者想要一种云供应商未能提供的东西
or maybe they want a type of offering that the cloud provider doesn't offer,

189
00:12:26,800 --> 00:12:28,991
还有一些东西可能开发者没有第一时间想要
and there's also some of those things that you do have to look at

190
00:12:28,991 --> 00:12:32,125
但你认为他们需要的
that developers aren't always the first ones to look at,

191
00:12:32,125 --> 00:12:35,901
对这些东西你还要进行成本效益分析
where you have to do that cost benefit analysis to understand,

192
00:12:35,901 --> 00:12:38,077
好吧 虽然使用公有云我们有很大的灵活性
okay, I have a lot of flexibility in public cloud,

193
00:12:38,325 --> 00:12:39,800
但我们到底付出了什么代价？
but how much does that really cost me? 

194
00:12:40,700 --> 00:12:45,637
Major 指出了另一个问题 这个问题超越了实用性
Major points out another issue, one that goes beyond practicalities

195
00:12:45,637 --> 00:12:49,477
并且触及了像我这样的开发人员所信奉的核心
and speaks to the heart of what developers like me believe in.

196
00:12:49,925 --> 00:12:52,574
那就是开源实践
 I'm talking about open source practices.

197
00:12:52,997 --> 00:12:57,093
即使云供应商允许你使用自己的开源工具
Even if cloud providers allow you to use your open source tools,

198
00:12:57,541 --> 00:12:59,904
但云本身并不是开源的
they're not themselves open.

199
00:13:00,825 --> 00:13:04,425
因此 开源对于云来说是一个需要处理的有趣议题
So, open source in the cloud is an interesting subject to tackle

200
00:13:04,425 --> 00:13:09,865
因为有大量的开源技术支持用户去高效地利用公有云
because there's plenty of open source technologies that allow you to take advantage of a public cloud,

201
00:13:09,865 --> 00:13:14,793
但并不是所有公有云都把它们的基础设施开源了
but not all public clouds have their infrastructure offered as open source.

202
00:13:14,793 --> 00:13:17,713
举个例子 如果你使用亚马逊
 So for example, if you take Amazon,

203
00:13:17,713 --> 00:13:22,257
你无法知道他们使用的什么技术来构建虚拟机和其他服务
you're not able to actually see what they're using to build VMs or build other services,

204
00:13:22,600 --> 00:13:25,444
所以 你不可能对这些东西做点调整
so if you wanted to make an adjustment for that, you really wouldn't be able to,

205
00:13:25,444 --> 00:13:27,748
或者很难了解幕后的机理和运作方法
or if you wanted to look behind the scenes and understand

206
00:13:27,748 --> 00:13:29,924
或者很难了解幕后的机理和运作方法
more of how it fits together, that would be difficult. 

207
00:13:30,614 --> 00:13:33,085
如果你听过我们之前关于 DevOps 的节目
If you listened to our episode on DevOps,

208
00:13:33,405 --> 00:13:39,037
你会知道打破开发者和运维之间的壁垒会让我们获益良多
you know there's a lot we can gain by tearing down the wall between developers and operations.

209
00:13:39,406 --> 00:13:42,839
架构师 Major 刚给了我们一些真知灼见
Architects like Major give us some crucial insights,

210
00:13:43,365 --> 00:13:45,925
接下来的这位是系统管理员 Nick Bush
and then there's sys admin, Nick Bush.

211
00:13:45,925 --> 00:13:49,637
他所在的团队正准备向云端迁移
He's on a team where people are ready to jump on the cloud.

212
00:13:49,975 --> 00:13:55,100
开发者们已经厌倦了每五年一次硬件换代
Developers are tired of being stuck with physical hardware that ages every five years,

213
00:13:55,607 --> 00:13:58,695
每个人都喜欢尽可能快地扩展
and everyone likes the idea of expanding as fast as they want, 

214
00:13:59,250 --> 00:14:03,490
而 Nick 想指出一些开发者可能没有考虑到的东西
but Nick wants to flag things that developers might not be considering. 

215
00:14:04,578 --> 00:14:06,834
是的 我想说的是 云是存在延迟的
Yeah. I mean, there is inherent latency.

216
00:14:06,834 --> 00:14:09,906
举个例子 就像远在蒙大拿的数据库服务器
I mean, that is a database server in Montana

217
00:14:09,906 --> 00:14:12,275
比起我用 10Gbps 带宽直连街对面的机房
versus my 10-gig connection down the street,

218
00:14:12,275 --> 00:14:16,323
单是数据库调用就会花费更长的时间
so just doing local database calls is gonna take longer.

219
00:14:16,323 --> 00:14:17,800
因为你和服务器之间相距更远了
It is a longer path to get there,

220
00:14:19,450 --> 00:14:22,807
也有各种安全上的因素
and there's other security stuff that's out there

221
00:14:22,807 --> 00:14:24,525
如果在自己的机房里 至少物理层面上不必担心
that we didn't have to worry about physical premise.

222
00:14:24,525 --> 00:14:28,302
毕竟我们能管控自己使用的硬件
Here, we were in control of our hardware and stuff like that.

223
00:14:28,302 --> 00:14:32,392
一旦换成云 你就得考虑可能进出服务器的其它连接
Once you are in the cloud, you gotta think about the other connections coming into that.

224
00:14:32,392 --> 00:14:34,824
因此我认为云的安全性还是较低一些
You gotta worry about security, I think, a little bit more,

225
00:14:35,976 --> 00:14:38,296
这也涉及到成本因素
and it is a price thing.

226
00:14:38,296 --> 00:14:40,650
你想要按月租一个云端虚拟机 要求网速快
Every month you want a sped-up VM,

227
00:14:40,650 --> 00:14:41,802
而且带有充足的存储空间
take up storage space.

228
00:14:42,075 --> 00:14:46,487
每千兆的传输和存储都是要花钱的
It is a cost per gigabyte, (you know,) transferred as well as stored,

229
00:14:46,487 --> 00:14:49,992
以前我们直接买服务器 买来之后它就任我们处置了
 where before we had a one-time purchase and we just had it there,

230
00:14:50,225 --> 00:14:51,525
我们可以把它存放起来 也可以拿出来使用
and we could store it, use it.

231
00:14:51,525 --> 00:14:55,685
只要还有地方放它 就不必花更多钱
We didn't have to pay anymore money as long as we had space for it.

232
00:14:58,475 --> 00:15:02,523
声明一下 Nick 确实认为此事利大于弊
For the record, Nick does think the pluses outweigh the minuses.

233
00:15:02,975 --> 00:15:05,679
他只是不想让我们认为这是个完美的系统
He just doesn't want us to pretend it's a perfect system. 

234
00:15:06,350 --> 00:15:08,862
如果你的云供应商宕机
What happens if your provider has an outage

235
00:15:08,862 --> 00:15:12,056
而你想在其他云中重新部署应用程序 会发生什么情况？
and you want to re-deploy an application in another cloud?

236
00:15:12,450 --> 00:15:17,074
或者 如果在不同事务上使用不同的云能带来价格优势呢？
Or what if there's a price advantage to using different clouds for different things?

237
00:15:17,637 --> 00:15:22,695
运维人员提出的这些问题都可以被总结于一个词汇下
A lot of the issues that the ops folks bring up can fit under a single label,

238
00:15:23,050 --> 00:15:24,725
也就是供应商依赖
vendor lock-in.

239
00:15:25,500 --> 00:15:27,750
你可能很熟悉这个词
You're probably familiar with this term.

240
00:15:28,134 --> 00:15:31,434
供应商依赖的意思是 在别人的服务器上构建业务
It's the concept that building on someone else's server

241
00:15:31,434 --> 00:15:34,497
会让你越来越依赖于他们的平台
gets you more and more tied to their platform.

242
00:15:34,950 --> 00:15:36,625
你被绑定在这个平台了
You get locked in.

243
00:15:37,200 --> 00:15:41,773
可能突然之间 你被迫升级系统、付出更多成本、接受新限制
Suddenly, you're being force fed upgrades, cost changes, new limits

244
00:15:41,773 --> 00:15:44,989
你变得身不由己 你懂的
you wouldn't have chosen for yourself. You get the idea.

245
00:15:46,205 --> 00:15:48,600
如果我们采取 DevOps 的工作方式
When we put our DevOps hats on,

246
00:15:48,600 --> 00:15:51,672
开发者和运维就可以一起工作
we can work together to see lock-in coming

247
00:15:51,672 --> 00:15:52,822
面对供应商锁定 对症下药
and plan around it,

248
00:15:53,175 --> 00:15:55,755
如果开发者和运维都只是各自为战
but when we're buried in our own code,

249
00:15:55,755 --> 00:15:58,523
我们有时就会忘记观览全局
we sometimes forget to look at the whole picture.

250
00:16:02,125 --> 00:16:07,111
为什么不找个折中方法 同时在公共和私有云上工作呢？
What about finding the right mix, working on both public and private clouds?

251
00:16:07,680 --> 00:16:11,584
终极解决方案可能是混合云
The ultimate solution might be in a hybrid cloud,

252
00:16:11,584 --> 00:16:13,209
兼具公有和私有云的优点
the best of both worlds.

253
00:16:14,425 --> 00:16:18,265
我给 Bridget Kromhout 打了电话 询问她的看法
 I called up Bridget Kromhout to get her perspective.

254
00:16:18,713 --> 00:16:22,629
她是微软员工中的头号云开发提倡者
She's a principal cloud developer advocate over at Microsoft, 

255
00:16:22,629 --> 00:16:25,279
对这方面非常了解
and knows this stuff backwards and forwards.

256
00:16:27,425 --> 00:16:30,309
如果我们考虑一种混合的解决方案
So, if we think about the hybrid solution

257
00:16:30,309 --> 00:16:34,928
既包含一些公有云 也包含一些私有云
having a little bit of that public cloud, but then also some of that private cloud,

258
00:16:35,312 --> 00:16:38,768
这是两者之间的完美平衡吗？
is that the perfect balance between the two?

259
00:16:39,152 --> 00:16:41,710
对于开发者 这是理想的解决方案吗？
Is that the ideal solution for developers?

260
00:16:42,025 --> 00:16:44,324
如果云是混合的 那么我就能想做什么就做什么
If it's hybrid, then I can kind of do whatever I want and

261
00:16:44,324 --> 00:16:48,098
想用什么工具就用什么
use whatever tools that I want on my end,

262
00:16:48,098 --> 00:16:51,490
同时仍然可以从大型公有云提供商那里获得一些好处
but then still get some of the benefits of the big public cloud providers.

263
00:16:51,618 --> 00:16:52,187
当然是的
Absolutely.

264
00:16:52,187 --> 00:16:59,927
举个例子 我有朋友在制造业中从事高性能计算研究工作
So, for example, I have friends who work in high-performance computing research at manufacturing companies,

265
00:17:00,225 --> 00:17:02,737
他们有各种各样的绝密资料
and they have all sorts of top secret, 

266
00:17:02,737 --> 00:17:06,566
或者有保密协议的资料 这样的东西不适合放在公有云上
NDA, whatever stuff that they don't feel comfortable putting on public cloud,

267
00:17:06,566 --> 00:17:10,800
于是 他们可能会在自己的数据中心跟这些资料打交道
and so maybe they're going to work in their datacenters on these workloads,

268
00:17:12,080 --> 00:17:15,488
处理客户数据 或者研究数据
crunching these customer numbers or whatever, these research numbers,

269
00:17:15,750 --> 00:17:16,807
他们可能也有…
and then they may have other...

270
00:17:16,807 --> 00:17:20,087
他们确实也有适合放在公有云上的其他工作资料
They do have other workloads that they feel comfortable having out in public cloud,

271
00:17:20,425 --> 00:17:22,534
不过我想这个问题就…
but I think this is kind of a question of... 

272
00:17:23,925 --> 00:17:28,673
有时也会有这样的问题 公有云是否适合某些工作资料
And sometimes there's questions, too, of whether public cloud has suitability for some of the workloads, 

273
00:17:28,673 --> 00:17:33,900
比如 如果你本来计划要用 InfiniBand 连接各个不同节点
like if you're planning on using InfiniBand interconnects between your nodes,
 [中文维基百科] InfiniBand 是一个用于高性能计算的计算机网络通信标准，它具有极高的吞吐量和极低的延迟
也用作服务器与存储系统之间的直接或交换互连，以及存储系统之间的互连 - 视频制作者注

274
00:17:33,900 --> 00:17:36,209
公有云又能满足这种需求到什么程度呢
how much of that are you gonna be able to provision in public cloud? 

275
00:17:36,725 --> 00:17:39,493
但这并不一定是完美的解决方案
But this isn't necessarily the perfect solution.

276
00:17:39,813 --> 00:17:43,509
Bridget 认为混合云也有自身的弊端
Bridget does think that hybrid clouds come with their own headaches.

277
00:17:43,975 --> 00:17:45,859
混合云的问题在于
The problem with hybrid is

278
00:17:45,859 --> 00:17:47,779
有时 人们欺骗自己
sometimes people fool themselves

279
00:17:48,163 --> 00:17:52,643
以为自己可以接受一些实际上不成熟的方案
and think that they can take something that really wasn't working,

280
00:17:52,771 --> 00:17:57,379
如果他们使用私有的服务器 部署一个虚拟机可能需要两周
so if they had their old processes with a two-week wait time to even get a single VM,

281
00:17:57,699 --> 00:18:01,326
然后出现了某种特殊情况 导致没办法等这么久
if they have a whole scenario like that and it wasn't working well,

282
00:18:01,710 --> 00:18:04,350
就会有一群人拿出信用卡
and then they have a bunch of people who have started taking their credit cards

283
00:18:04,350 --> 00:18:06,462
找到公有云提供商准备租服务器了 因为他们失望极了
to the public cloud providers because they're frustrated,

284
00:18:06,875 --> 00:18:09,115
然后他们又想办法把公有云和原先的系统粘合在一起
and then they try to somehow glue those together,

285
00:18:09,115 --> 00:18:12,800
这样一来就会出现数据来源和延迟的问题
but then there's problems with data provenance and latency

286
00:18:12,800 --> 00:18:14,800
或者…我不知道 像是数据集脱同步之类的问题
and, I don't know, de-synced data sets,

287
00:18:14,800 --> 00:18:17,719
出错的方式可以有很多种
there's a lot of ways it can go wrong.

288
00:18:18,100 --> 00:18:20,826
我认为 如果你和云服务提供商合作
I think if you work with your cloud providers

289
00:18:20,826 --> 00:18:24,576
或许会有成熟可靠的直连方案*
you can add some of the direct connection things that are available
*而不是在这里手搓混合云 - 视频制作者注

290
00:18:24,850 --> 00:18:27,554
这样你就可以更好地同步数据
so that you can sync things better,

291
00:18:28,300 --> 00:18:29,800
这样是很有帮助的
that can help.

292
00:18:30,075 --> 00:18:34,550
是的 当我们在开源的语境下谈到云的时候
Yeah. So, when we talk about the cloud in the context of open source,

293
00:18:34,550 --> 00:18:37,174
我觉得 作为开发者
I feel like as developers we,

294
00:18:37,430 --> 00:18:39,556
可能大多数人 都喜欢开源；
I think most of us, really like open source,

295
00:18:39,556 --> 00:18:40,964
如果你还在听我们的播客节目 就更是这样 对吧？
especially if you're listening to this podcast. Right?

296
00:18:40,964 --> 00:18:44,206
你希望一切都是开放的 透明的 还向大众共享代码
You want everything to be open and transparent and share the code and all that,

297
00:18:44,675 --> 00:18:47,625
但我觉得 当我们谈到云计算
but I feel like when we talk about the cloud,

298
00:18:48,009 --> 00:18:52,135
因为它不会给人感觉是代码库
because it doesn't feel like its own code base,

299
00:18:52,135 --> 00:18:53,576
不会让人觉得云本身是个项目
doesn't feel like its own project,

300
00:18:53,576 --> 00:18:58,467
它是环境 是可以用来帮助我们运行代码的东西
it's the environment, it's the thing that we can use to help us run our code,

301
00:18:59,100 --> 00:19:04,844
开发人员们还会坚持要让它
are developers as insistent on that part of the story

302
00:19:04,844 --> 00:19:07,940
像是传统的项目和代码库一样开源、透明吗？
being open source and transparent the way that we

303
00:19:07,940 --> 00:19:11,684
像是传统的项目和代码库一样开源、透明吗？
sometimes feel very strongly about when it comes to our projects and our code base? 

304
00:19:12,626 --> 00:19:14,901
我觉得这是一个非常合理的问题
I think that's a really reasonable question,

305
00:19:15,151 --> 00:19:21,301
我觉得这可能也会归结到你到底要注目于技术栈的哪一部分
and I think that might also come down to exactly where in the stack are you going to pick to care about,

306
00:19:21,301 --> 00:19:26,902
想一想 你对芯片的了解有多少？你又能在何种程度上操控它们？
because if you think about it, how much access to and info do you have about the chips?

307
00:19:27,250 --> 00:19:29,525
确实 你说得有道理
Yeah, that's true. That's fair.

308
00:19:29,800 --> 00:19:31,800
他们坐在那里 他们有硅 他们也有秘密
Sitting over there with some silicon and some secrets.

309
00:19:31,800 --> 00:19:33,975
他们不一定会将后者给你
They're not necessarily giving that to you. 

310
00:19:33,975 --> 00:19:35,651
他们不一定会将后者给你
They're not necessarily giving that to you. 
[Saron] Silicon and secrets. That's a good podcast name, by the way.
[Saron] 顺便 “硅和秘密”很适合做播客的名字

311
00:19:35,651 --> 00:19:36,935
[Saron] Silicon and secrets. That's a good podcast name, by the way.
[Saron] 顺便 “硅和秘密”很适合做播客的名字

312
00:19:38,000 --> 00:19:41,630
对吧？也许问题不在于是否一切都是开放的
Right? Maybe the question is not is everything open,

313
00:19:41,630 --> 00:19:44,690
而在于你需要开放的一切是否都是开放的
but is everything open that you need to be open,

314
00:19:44,882 --> 00:19:48,246
以及 当服务没有完全按照正确的方式运行时
and of course, is your provider gonna have transparency with you

315
00:19:48,246 --> 00:19:51,551
你的服务提供者是否会对你保持信息透明
when things don't operate exactly as they should,

316
00:19:51,551 --> 00:19:52,740
如果没有的话 事情不好解决
because hopefully they will.

317
00:19:56,000 --> 00:19:59,707
我能理解 Bridget 作为公有云提供商的立场
So, I get Bridget's perspective as a public cloud provider,

318
00:20:00,027 --> 00:20:01,567
她提出了一个有趣的观点
and she makes an interesting point.

319
00:20:01,825 --> 00:20:05,972
开发者对云的控制究竟需要深入到什么程度呢？
How granular does a developer's control need to be on the cloud?

320
00:20:06,450 --> 00:20:08,962
至于我 我的看法不一样
As for me, I look at it differently.

321
00:20:09,250 --> 00:20:14,194
我不想为了一点公有云的优势而牺牲的是什么呢？
What don't I want to sacrifice in order to get some of that public cloud goodness? 

322
00:20:15,200 --> 00:20:17,554
比如说 一个应用在公有云上运行
Say an app is running on a public cloud

323
00:20:17,810 --> 00:20:20,527
然后 等一下 现在我已经扩大了规模
and then, wait a minute, now I've scaled up

324
00:20:20,850 --> 00:20:23,018
或者有新的合规要求
or there's new compliance requirements

325
00:20:23,210 --> 00:20:26,490
我的应用在私有云上更合适
and it makes more sense for my app to be in a private cloud.

326
00:20:27,000 --> 00:20:28,875
把应用从一个地方迁移到另一个地方之前
Moving that app point to point,

327
00:20:29,150 --> 00:20:31,290
我需要知道它在迁移之后仍能工作
I need to know it's going to work.

328
00:20:31,290 --> 00:20:35,830
我需要知道它是以原先同样的方式打包 以同样的方式配置
I need to know things are packaged the same way, configured the same way.

329
00:20:36,214 --> 00:20:37,089
换句话说
In other words,

330
00:20:37,244 --> 00:20:41,936
我需要知道从一个云跳到另一个云总是可能的
I need to know that jumping from cloud to cloud is always possible.

331
00:20:43,532 --> 00:20:44,641
除此之外 我们还有什么选择？
What's the alternative?

332
00:20:44,950 --> 00:20:47,730
仅仅锁定在一家云提供商？
Getting locked into just one cloud provider?

333
00:20:48,050 --> 00:20:52,098
一个甚至可能完全垄断整个行业的供应商？
A provider that might even gain a total monopoly over all the others?

334
00:20:52,674 --> 00:20:55,826
不能选择迁移到另一个环境的话
Not having the option to move to a different environment,

335
00:20:56,225 --> 00:21:00,145
这就像把一只手绑在背后写代码一样
that's like trying to code with one hand tied behind your back. 

336
00:21:01,925 --> 00:21:06,229
所以 我们不想欠下任何一朵云的人情 并且被它困住
So, we don't want to be trapped and beholden to any one cloud.

337
00:21:06,741 --> 00:21:09,445
我们希望在合适的时候能够在云间跳转
We want to be able to cloud hop when it suits us.

338
00:21:10,021 --> 00:21:12,917
用摇滚传奇皇后乐队的名言来说
 In the immortal words of rock legend Queen,

339
00:21:12,917 --> 00:21:14,917
“我想要挣脱束缚”
“I want to break free.”

340
00:21:17,450 --> 00:21:22,957
我们希望能够获得公有云的绝佳拓展性
We want access to that fantastic scalability you find in public clouds,

341
00:21:22,957 --> 00:21:30,317
但又不放弃使用开源工具和方法所带来的自由
but without giving up the freedoms that we've come to expect from using open-sourced tools and methods.

342
00:21:31,075 --> 00:21:35,891
有个好消息 混合云的建设正在顺利进行中
Here's the good news. The work on those hybrid clouds is well underway.

343
00:21:37,500 --> 00:21:41,356
Mike Ferris 红帽公司的的业务架构副总裁
Mike Ferris, VP of Business Architecture at Red Hat

344
00:21:41,676 --> 00:21:43,411
他给出了一个很好的解释
gives a great explanation

345
00:21:43,411 --> 00:21:47,527
说明了混合云是如何帮助我们保持开源精神的
 of how hybrid clouds help us maintain that open source ethos.

346
00:21:48,775 --> 00:21:52,800
开源是世界上几乎每一个云服务的基础
Open source is really the base for almost every cloud in the world

347
00:21:52,800 --> 00:21:54,748
就算不能说“所有的基础设施和工具”都来自于开源项目
and now many, if not most,

348
00:21:54,748 --> 00:21:57,179
这个世界上也有许多应用程序的基础设施
of the application infrastructures in the world

349
00:21:57,499 --> 00:21:59,499
以及相关的工具来自于开源
and the tooling evolves from that,

350
00:21:59,750 --> 00:22:01,575
不管是用于管理项目的工具
the management capabilities,

351
00:22:01,575 --> 00:22:06,528
还是用于构建和部署应用的工具
everything that people are using to build and deploy

352
00:22:06,528 --> 00:22:09,965
不管这些应用是用于关键任务还是非关键任务
mission-critical applications as well as non-mission-critical applications

353
00:22:09,965 --> 00:22:11,614
开发它们的工具全都基于开源
if it's all based on open source.

354
00:22:12,062 --> 00:22:14,446
混合云的概念和这一点非常兼容
This concept of hybrid really flows alone with it

355
00:22:14,446 --> 00:22:18,158
这代表着 我们可以在混合云中处处使用开源工具
meaning that they have the ability to use these things wherever they are

356
00:22:18,800 --> 00:22:23,088
可以最大程度地发挥出基础设施的优势
to take advantage of the best feature sets on what infrastructure is there,

357
00:22:23,536 --> 00:22:25,228
这是基于以下的一点事实：
all based upon this concept that

358
00:22:25,228 --> 00:22:31,324
开源能在一定程度上规定将来的开发方式与技术标准
that open source is really helping define the standards that are driving this next generation of development

359
00:22:31,324 --> 00:22:35,897
因为其当今的影响力相当强大
while they continue to leverage all the investments that they've made in the past. 

360
00:22:37,450 --> 00:22:40,080
我认为云计算本身具有开放的倾向
I think the cloud wants to be open.

361
00:22:40,390 --> 00:22:44,972
在本季节目中 我们花了很多时间讨论开源的起源
We've spent a lot of time this season talking about the origins of open source.

362
00:22:45,450 --> 00:22:46,825
你甚至可以证明
You can even make the case

363
00:22:46,825 --> 00:22:51,419
某些版本的混合云是这些相同理想的延伸
that some version of hybrid would be an extension of those same ideals.

364
00:22:52,225 --> 00:22:57,248
在过去几十年里 开源开发活动的变化是
What has changed in the open source development activities over the past several decades

365
00:22:57,440 --> 00:23:00,125
越来越多的人参与进来了
has been that many more people have gotten involved,

366
00:23:00,509 --> 00:23:03,817
包括像微软、IBM 这样的行业巨头
including people like Microsoft, IBM.

367
00:23:04,009 --> 00:23:05,931
你知道 随便说个大公司的名字
You know, name a big corporation,

368
00:23:05,931 --> 00:23:09,067
他们要么使用开源软件来提供产品
they're either using open source for their offerings

369
00:23:09,323 --> 00:23:12,462
要么构建开源软件并将其回馈给社区
or they're building open source and contributing that back to the community

370
00:23:12,462 --> 00:23:13,887
或者两项都参与
or some combination of both.

371
00:23:14,462 --> 00:23:22,300
这些来自客户的重要需求通过大公司涌入
This influx of really important needs from customers through those large corporations

372
00:23:22,700 --> 00:23:24,625
确实帮助了开源世界的发展
has really helped evolve open source

373
00:23:24,625 --> 00:23:30,194
使之从最初设想中 Solaris 和 UNIX 环境的替代方案逐渐扩张
from being what was originally intended to displace the Solaris and UNIX environments,

374
00:23:30,514 --> 00:23:35,131
如今 不仅是社区和业余爱好者使用开源工具
to something that's the basis for not just community and hobbyist use

375
00:23:35,515 --> 00:23:38,347
部分企业也将自己的关键任务交托给开源
but also certainly mission-critical enterprise use. 

376
00:23:39,755 --> 00:23:42,171
开源正在快速成长
Open source is growing up, fast.

377
00:23:42,683 --> 00:23:46,593
现在 我们有机会牢牢记住其初心
Now, we have the chance to make sure we remember where we come from.

378
00:23:47,105 --> 00:23:51,170
当我们跃上云时 可以在其中保留属于自己的部分
As we hop on the cloud, we can claim part of it for ourselves

379
00:23:51,170 --> 00:23:52,920
以此来保持云的开放
and keep the cloud open.

380
00:23:53,845 --> 00:23:58,990
幸运的是 由于有了 OpenStack® 平台这样的工具
Luckily, building open source bridges between clouds is getting a lot easier

381
00:23:58,990 --> 00:24:01,883
在云之间建造开源桥梁变得更加容易了
thanks to work like the OpenStack platform.

382
00:24:02,400 --> 00:24:07,125
Rackspace 的首席架构师 Major Hayden 描述了它的起源
Major Hayden, principal architect at Rackspace, describes its origins. 

383
00:24:07,450 --> 00:24:11,126
OpenStack® 来自于 Rackspace 和 NASA 的合作：
It really came from Rackspace and NASA getting together and saying,

384
00:24:11,126 --> 00:24:14,147
“你看 这是一种建设基础设施的新方式
"Hey look, this is a new way to build infrastructure

385
00:24:14,531 --> 00:24:16,805
我们应该公开进行
and we should do it out in the open.

386
00:24:16,805 --> 00:24:20,114
我们应该得到更多的意见 应该和更多的人交流
We should get more of this input. We should talk to more people.

387
00:24:20,114 --> 00:24:22,034
我们得让更多人用它”
We should get more use cases."

388
00:24:22,482 --> 00:24:25,002
 OpenStack® 是一组应用
 What OpenStack is, it's a group of applications

389
00:24:25,002 --> 00:24:28,545
它能很好地协同创建基础设施
that work really well together to create infrastructure,

390
00:24:28,545 --> 00:24:31,992
并全面管理基础设施
to manage infrastructure all across the board.

391
00:24:32,225 --> 00:24:36,029
无论你需要复杂的虚拟机
Whether you need complex virtual machines,

392
00:24:36,879 --> 00:24:38,029
复杂的网络
complex networking,

393
00:24:38,450 --> 00:24:40,292
还是有奇怪的存储要求
you have strange storage requirements,

394
00:24:40,292 --> 00:24:42,621
OpenStack® 通常可以满足大部分的要求
OpenStack can usually fit most of those. 

395
00:24:43,005 --> 00:24:47,363
Major 提到的这一点是开源项目独有的优势之一：
Major is talking about adding something that open source knows how to deliver.

396
00:24:47,675 --> 00:24:49,150
极高的适应性
Adaptability.

397
00:24:49,411 --> 00:24:50,396
在我看来
When I look at OpenStack,

398
00:24:50,396 --> 00:24:55,445
OpenStack® 是一组相互连接的开源应用程序
I look at it as an interconnected set of open source applications

399
00:24:55,750 --> 00:24:59,696
它让你能建设你想要的基础设施
that allow you to build the infrastructure that you want.

400
00:25:00,208 --> 00:25:02,128
如果它不能满足你的需求
 If it can't build what you want

401
00:25:02,128 --> 00:25:04,376
你就可以进入社区 对它作出改变
then you can go in the community and make changes to it.

402
00:25:04,376 --> 00:25:07,269
我喜欢我去和顾客交谈时他们的反应
I love the reaction when I go and talk to customers and they say,

403
00:25:07,589 --> 00:25:09,406
“我们想修改这里 还有那里”
"Well we want to change this. We want to change this."

404
00:25:09,406 --> 00:25:11,134
我们会说 “好呀 随便改吧”
We say, "Well, you can." 

405
00:25:11,608 --> 00:25:18,075
我们该如何确保未来的云也具有这种适应性呢？
How do we make sure that level of adaptability is enshrined in the cloud of tomorrow?

406
00:25:18,375 --> 00:25:20,935
就像我们在之前的节目中谈到的许多问题一样
Like many issues we've talked about in past episodes,

407
00:25:21,255 --> 00:25:23,763
这需要强大的社区
it's all about strong communities. 

408
00:25:24,403 --> 00:25:28,059
有请 Brandon Butler 《网络世界》的高级编辑
Brandon Butler, senior editor at Network World.

409
00:25:28,443 --> 00:25:33,228
例如 我们已经看到了云原生计算基金会的成立
For example, we've seen the Cloud Native Computing Foundation be created

410
00:25:33,228 --> 00:25:34,508
这个基金会制定标准
to create standards

411
00:25:34,508 --> 00:25:37,212
他们推广应用容器的使用
and the use of application containers

412
00:25:37,212 --> 00:25:38,312
并创造了 Kubernetes
and Kubernetes.

413
00:25:38,575 --> 00:25:41,862
我们也看到了 OpenStack 基金会的成立
We've seen the OpenStack foundation be created

414
00:25:41,862 --> 00:25:45,382
好将 OpenStack® 用户聚集在一起
to bring OpenStack users together

415
00:25:45,382 --> 00:25:50,506
以此讨论创建开源基础设施服务云的最佳方式
to talk about best practices when creating open source infrastructure service clouds. 

416
00:25:51,125 --> 00:25:56,849
支撑这些开源社区的社群极为重要
The communities that underpin these open source communities

417
00:25:57,169 --> 00:26:04,032
无论是开发将来的开源工具
are hugely important for developing the next wave of open source tools,

418
00:26:04,224 --> 00:26:08,928
还是学习使用开源平台的最佳方式
 for learning best practices about how to use these open source platforms,

419
00:26:09,120 --> 00:26:15,723
甚至于鼓励公有云厂商接受开源标准这方面 他们都起到关键作用
and for encouraging these public cloud vendors to embrace these open source standards. 

420
00:26:17,175 --> 00:26:21,694
一旦我们开始建设混合云 并使其尽可能地开放
Once we start building that hybrid cloud, making it as open as possible,

421
00:26:22,142 --> 00:26:24,242
其潜力似乎真的无穷无尽
the potential really seems endless.

422
00:26:25,564 --> 00:26:26,689
有请 Major
Here's Major.

423
00:26:26,689 --> 00:26:27,828
我最为乐见的就是
What I'm most excited about

424
00:26:27,828 --> 00:26:32,553
越来越多的东西能横跨不同的云运行
is just to see more things that can come together on top of different clouds.

425
00:26:32,848 --> 00:26:38,157
例如 OpenStack® 提供了一层很好的基础设施
For example, OpenStack provides a great base layer of infrastructure,

426
00:26:38,157 --> 00:26:40,246
但你也能在其上作出很多改动
but then you can do so much on top of it.

427
00:26:40,630 --> 00:26:46,623
我想有时候 有些公司会采用 OpenStack® 然后说
I think sometimes different companies will adopt OpenStack and then say,

428
00:26:46,623 --> 00:26:47,956
“伙计 我现在该怎么办？
"Man, what do I do now?

429
00:26:47,956 --> 00:26:49,760
我的自由程度太高了 我不知道该怎么办
I have all this freedom. I don't know what to do."

430
00:26:49,760 --> 00:26:52,759
这就像你有一个装满食物的冰箱 你会想
It's kind of like when you have a refrigerator full of food and you're like,

431
00:26:52,759 --> 00:26:53,819
“啊 我不知道该做什么菜”
"Ah, I don't know what to make." 

432
00:26:54,587 --> 00:26:56,587
这可真是种甜蜜的苦恼
I love having that problem.

433
00:27:00,818 --> 00:27:03,855
Chris Watterson 告诉我们的可能是对的
Chris Watterson might have been right when he told us.

434
00:27:04,175 --> 00:27:06,863
没有所谓的“云” 那只是别人的电脑
There is no Cloud. It's just someone else's' computer.

435
00:27:08,399 --> 00:27:10,022
但故事并未在此结束
But that's not the end of the story.

436
00:27:10,214 --> 00:27:14,534
我们要与混合云一起跨入下一章
With hybrid clouds, we get to write ourselves back into the next chapter.

437
00:27:16,902 --> 00:27:21,450
创建混合云应用的关键可能还没有被破解
The key to creating a hybrid cloud app probably hasn't been cracked yet.

438
00:27:21,875 --> 00:27:24,275
跨多云管理任务
Managing work across multiple clouds,

439
00:27:24,575 --> 00:27:28,629
对于今天的代码英雄们来说将是一项艰巨的任务
that's going to be a huge job for today's command line heroes.

440
00:27:28,875 --> 00:27:32,484
需要长期的尝试 犯下无数错误 但这是值得的
There'll be a lot of trial and error but it is so worth it,

441
00:27:32,875 --> 00:27:34,875
因为我们知道
because the one thing we do know

442
00:27:35,067 --> 00:27:41,294
只要坚持开源 开发者们就能将世界带向他们希望的方向
is that staying open source means developers can always build the world they want to work in.

443
00:27:41,675 --> 00:27:43,586
这种灵活性
That kind of flexibility

444
00:27:43,586 --> 00:27:48,949
正是紧紧抓住标志性的开源叛逆精神的诀窍
is how we're going to hold on to the rebel spirit that open source does best. 

445
00:27:55,875 --> 00:27:58,707
下一集是我们本季的最后一集
Next episode - our season finale - 

446
00:27:59,143 --> 00:28:04,583
我们将从宏观角度出发 观察开源作为一种全球现象的面貌
we are zooming out for a big picture view of what open source looks like as a global phenomenon,

447
00:28:04,583 --> 00:28:07,174
其印象之深远会让你震惊
in ways that are going to surprise you.

448
00:28:07,558 --> 00:28:09,846
我们也将展望开源的未来
We'll also look to the future of open source,

449
00:28:10,358 --> 00:28:14,641
开发人员如何保持像林纳斯·托瓦兹这样的英雄的精神
how our developers preserving the spirit of heroes like Linus Torvalds,

450
00:28:15,089 --> 00:28:17,089
就算与此同时 他们也在让自己的行业天翻地覆
even as they reinvent their industry.

451
00:28:19,283 --> 00:28:22,954
《代码英雄》是一档红帽公司推出的原创播客
Command Line Heroes is an original podcast from Red Hat.

452
00:28:23,325 --> 00:28:26,416
想了解更多关于本期和往期节目的信息
For more information about this and past episodes

453
00:28:26,608 --> 00:28:30,225
请访问 RedHat.com/CommandLineHeroes
go to RedHat.com/CommandLineHeroes.

454
00:28:30,500 --> 00:28:33,522
在那里你也可以注册我们的新闻通讯
Once you're there you can also sign up for our newsletter.

455
00:28:33,970 --> 00:28:40,082
想免费获得新一期节目推送 请务必订阅本系列
To get new episodes delivered automatically for free, make sure to subscribe to the show.

456
00:28:40,429 --> 00:28:45,334
只要在苹果播客、Spotify、
Just search for Command Line Heroes in Apple Podcasts, Spotify,

457
00:28:45,334 --> 00:28:47,000
Google Play、CastBox
Google Play, CastBox,

458
00:28:47,000 --> 00:28:48,650
和其他播客平台中搜索《代码英雄》
and other podcast players.

459
00:28:49,000 --> 00:28:50,673
然后点击订阅
 Then hit subscribe

460
00:28:51,000 --> 00:28:54,512
你就可以第一时间收听新一期
so you'll be the first to know when new episodes are available.

461
00:28:56,525 --> 00:28:57,733
我是 Saron Yitbarek
I'm Saron Yitbarek.

462
00:28:57,733 --> 00:29:00,143
感谢你的聆听 编程不止
Thanks for listening and keep on coding. 

